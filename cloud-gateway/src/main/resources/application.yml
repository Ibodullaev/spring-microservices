server:
  port: 9191

spring:
  application:
    name: API-GATEWAY
  cloud:
    gateway:
      routes:
        - id: USER-SERVICE
          uri: lb://USER-SERVICE
          predicates:
            - Path=/users/**
          filters:
            - name: CircuitBreaker #write with capital letter(like for retry = Retry, circuitbreaker = CircuitBreaker, ratelimiter = RateLimiter
              args:
                name: userService
                fallbackuri: forward:/userServiceFallbackMethod
        - id: DEPARTMENT-SERVICE
          uri: lb://DEPARTMENT-SERVICE
          predicates:
            - Path=/departments/**
          filters:
            - name: CircuitBreaker #write with capital letter(like for retry = Retry, circuitbreaker = CircuitBreaker, ratelimiter = RateLimiter
              args:
                name: departmentService
                fallbackuri: forward:/departmentServiceFallbackMethod

#Actuator Configuration
management:
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include: health
  endpoint:
    health:
      show-details: always

#Resilience4j Configuration
resilience4j:
  circuitbreaker:
    instances:
      userService:
        registerHealthIndicator: true
        eventConsumerBufferSize: 10
        failureRateThreshold: 50
        minimumNumberOfCalls: 5
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 5s
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        slidingWindowType: COUNT_BASED
      departmentService:
        registerHealthIndicator: true
        eventConsumerBufferSize: 10
        failureRateThreshold: 50
        minimumNumberOfCalls: 5
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 5s
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        slidingWindowType: COUNT_BASED
  retry:
    instances:
      userService:
        registerHealthIndicator: true
        maxRetryAttempts: 5
        waitDuration: 10s
      departmentService:
        registerHealthIndicator: true
        maxRetryAttempts: 5
        waitDuration: 10s
  ratelimiter:
    instances:
      userService:
        registerHealthIndicator: false
        limitForPeriod: 10
        limitReshreshPeriod: 10s
        timeoutDuration: 3s
      departmentService:
        registerHealthIndicator: false
        limitForPeriod: 10
        limitReshreshPeriod: 10s
        timeoutDuration: 3s


#eureka:
#  client:
#    register-with-eureka: true
#    fetch-registry: true
#    service-url:
#      defaultZone: http://localhost:8761/eureka/
#  instance:
#    hostname: localhost